package com.market.pos.tool.hideroom;import com.google.gson.Gson;import com.market.pos.pojo.AskQQMessage;import com.market.pos.tool.pk.GetGrade;import java.text.SimpleDateFormat;import java.util.Date;public class HurtHideRoom {    public static String ask;    //攻击闭关者    public static void hurtHideRoom(String qqid,String be_qqid,String groupid){        AskQQMessage askQQMessage = new AskQQMessage();        askQQMessage.setAct("101");        askQQMessage.setGroupid(groupid);        askQQMessage.setQQID(qqid);        //得到攻击者的userid和被挑战者的be_userid,如果无数据，则userid = null        hideRoomService.selectHideRoom(qqid);        String userid = hideRoomService.userid;        hideRoomService.selectHideRoom(be_qqid);        String be_userid = hideRoomService.userid;        hideRoomService.selectHideRoom(be_qqid);        String start_time = hideRoomService.start_time;        //被攻击者没有数据        if (be_userid == null){            //输出“他并没有闭关哦，侠士白跑一趟筋疲力尽，请明日再去偷袭闭关者吧！”            askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 他并没有闭关哦，侠士白跑一趟筋疲力尽。" +                    "\n请明日再去偷袭闭关者吧 ！");            ask = new Gson().toJson(askQQMessage);            IsUserIdNull.isUserIdNull(userid,qqid);        }else {            hideRoomService.selectHideRoom(be_qqid);            int is_hurt = hideRoomService.is_hurt;            //如果目标被伤害过了            if (is_hurt == 1){                askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 他今天已经被偷袭过了，放过他把 ！" +                        "\n请选择其他可能处于闭关状态的目标来偷袭 ！");                ask = new Gson().toJson(askQQMessage);                IsUserIdNull.isUserIdNull_failed(userid,qqid);            } else {                //查询挑战者是否有次数                hideRoomService.selectHideRoom(qqid);                int user_do_hurt = hideRoomService.do_hurt;                if (user_do_hurt == 1){                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 今天次数已经被用完了。" +                            "\n少侠请明日再来吧 ！");                    ask = new Gson().toJson(askQQMessage);                }else {                    //有偷袭次数                    if (start_time == null){                        //输出“他并没有闭关哦，侠士白跑一趟筋疲力尽，请明日再去偷袭闭关者吧！”                        askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 他并没有闭关哦，侠士白跑一趟筋疲力尽。" +                                "\n请明日再去偷袭闭关者吧 ！");                        ask = new Gson().toJson(askQQMessage);                        IsUserIdNull.isUserIdNull(userid,qqid);                    } else {                        //偷袭事件可以发生，获取当前时间                        Date date = new Date();                        long time_end = date.getTime();                        //查询闭关者的闭关时间 time                        hideRoomService.selectHideRoom(be_qqid);                        long time_start = Long.valueOf(start_time);                        SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss");                        String time = df.format(time_start);                        System.out.println(time_start);                        System.out.println(time_end);                        //计算时间差                        long time_ch = time_end - time_start;                        System.out.println("时间差："+time_ch);                        //如果time > 7200000，闭关已经结束了                        if (time_ch >= 7200000){                            askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 很遗憾，你选对了人，可是他已经闭关结束了，不受影响。" +                                    "\n他留言对你说：“ 打不到我吧！来呀！可跳可痒痒了！” ");                            ask = new Gson().toJson(askQQMessage);                            //消耗攻击者次数，此时数据库中闭关者is_hurt = 0                            if (userid == null){                                hideRoomService.insertHideRoom(qqid);                                hideRoomService.updateHideRoom(qqid,"do_hurt","1");                            }else {                                hideRoomService.updateHideRoom(qqid, "do_hurt", "1");                            }                        }else {                            askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 他正在闭关，你突然闯入，吓得他一哆嗦，修为立马掉了500点！" +                                    "\n少侠明天要不要接着偷袭他！ ");                            ask = new Gson().toJson(askQQMessage);                            //消耗攻击者次数，此时数据库中闭关者is_hurt = 1                            IsUserIdNull.isUserIdNull(userid,qqid);                            hideRoomService.updateHideRoom(be_qqid,"is_hurt","1");                            //更新被挑战者数据                            GetGrade.getGrade(be_qqid);                            int start_grade = GetGrade.grade;                            int last_grade = start_grade - 500;                            GetGrade.update_behurt_user(be_qqid,last_grade);                        }                    }                }            }        }    }}