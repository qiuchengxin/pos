package com.market.pos.tool.qiandao;import com.google.gson.Gson;import com.market.pos.pojo.AskQQMessage;import com.market.pos.tool.dujie.GradeJudge;import com.market.pos.tool.dujie.SkyService;import com.market.pos.tool.pk.GetGrade;import java.text.SimpleDateFormat;import java.util.Date;/** * 分析用户意图 */public class QianDao {    public static String ask;    /**     * 签到逻辑     *     * @param qqid     * @param name     * @param msg     * @param groupid     */    public static void nluMod(String qqid, String name, String msg, String groupid) {        //获取当前用户的积分 grade        GetGrade.getGrade(qqid,groupid);        int default_grade = GetGrade.grade;        //获取当前用户的日签到数 daily        GetGrade.getDaily(qqid,groupid);        int daily = GetGrade.daily;        //获取更新时间 update_time        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        String update_time = df.format(new Date());        AskQQMessage askQQMessage = new AskQQMessage();        askQQMessage.setAct("101");        askQQMessage.setGroupid(groupid);        //获取sky表中的done字段        GradeJudge.gradeJudge(qqid,groupid);        SkyService.searchSky(qqid,groupid);        int done = SkyService.done;        //如果当前用户数据库中无数据        if (default_grade == 0) {            int new_grade = (int) (Math.random() * 100) + 100;             String dengji = DengJi.dengJi(new_grade);             askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 首次签到成功，增加修为:" + new_grade + " 点，当前境界：" + dengji + " 修为：" + new_grade + " 点,想变强，就充钱吧！");             ask = new Gson().toJson(askQQMessage);             //数据入库             GetGrade.insertUsers(qqid, name, new_grade, update_time,groupid);        }        //有用户数据 但今天没签到        if (default_grade != 0 && daily == 0) {            //获取随机数            int qd_num = (int)(Math.random()*100);            if (qd_num < 70){                //普通签到                int new_grade = (int) (Math.random() * 100) + 100;                int last_grade = default_grade + new_grade;                //如果修为大于20000且未渡劫，将修为置为20000整                if (last_grade >= 15000 && done == 0){                    last_grade = 15000;                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 您的天劫已经来临，请对我说“我要渡劫” 。");                    ask = new Gson().toJson(askQQMessage);                    //数据入库                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }if (last_grade < 15000){                    String dengji = DengJi.dengJi(last_grade);                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 今天签到成功，增加修为:" + new_grade + " 点，当前境界：" + dengji + " 修为：" + last_grade + " 点");                    ask = new Gson().toJson(askQQMessage);                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }            }            if (qd_num >=60 && qd_num < 80){                //奇遇：少年行 额外增加1000点                int new_grade = (int) (Math.random() * 100) + 100;                int qy_grade = 1000;                int last_grade = default_grade + new_grade + qy_grade;                //如果修为大于20000且未渡劫，将修为置为20000整                if (last_grade > 15000 && done == 0){                    last_grade = 15000;                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 您的天劫已经来临，请对我说“我要渡劫” 。");                    ask = new Gson().toJson(askQQMessage);                    //数据入库                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }else {                    String dengji = DengJi.dengJi(last_grade);                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 少侠正在茶馆闲坐，不经意间触发奇遇 《少年行》，增加修为: （" + new_grade + " + " + qy_grade + " ）点，当前境界：" + dengji + " 修为：" + last_grade + " 点");                    ask = new Gson().toJson(askQQMessage);                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }            }            if (qd_num >= 80 && qd_num < 90){                //奇遇：扶摇九天                int new_grade = (int) (Math.random() * 100) + 100;                int qy_grade = 1500;                int last_grade = default_grade + new_grade + qy_grade;                //如果修为大于20000且未渡劫，将修为置为20000整                if (last_grade > 15000 && done == 0){                    last_grade = 15000;                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 您的天劫已经来临，请对我说“我要渡劫” 。");                    ask = new Gson().toJson(askQQMessage);                    //数据入库                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }else {                    String dengji = DengJi.dengJi(last_grade);                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 恭喜你成功触发奇遇 《扶摇九天》，增加修为:（" + new_grade + " + " + qy_grade + " ） 点，当前境界：" + dengji + " 修为：" + last_grade + " 点");                    ask = new Gson().toJson(askQQMessage);                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }            }            if (qd_num >= 90 && qd_num < 98){                //奇遇：黑白路                int new_grade = (int) (Math.random() * 100) + 100;                int qy_grade = 1800;                int last_grade = default_grade + new_grade + qy_grade;                //如果修为大于20000且未渡劫，将修为置为20000整                if (last_grade > 15000 && done == 0){                    last_grade = 15000;                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 您的天劫已经来临，请对我说“我要渡劫” 。");                    ask = new Gson().toJson(askQQMessage);                    //数据入库                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }else {                    String dengji = DengJi.dengJi(last_grade);                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 你成功触发了奇遇 《黑白路》，增加修为:（" + new_grade + " + " + qy_grade + " ） 点，当前境界：" + dengji + " 修为：" + last_grade + " 点");                    ask = new Gson().toJson(askQQMessage);                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }            }            if (qd_num >= 98){                //奇遇：斗帝传承                int new_grade = (int) (Math.random() * 100) + 100;                int qy_grade = 4000;                int last_grade = default_grade + new_grade + qy_grade;                //如果修为大于20000且未渡劫，将修为置为20000整                if (last_grade > 15000 && done == 0){                    last_grade = 15000;                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 您的天劫已经来临，请对我说“我要渡劫” 。");                    ask = new Gson().toJson(askQQMessage);                    //数据入库                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }else {                    String dengji = DengJi.dengJi(last_grade);                    askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 少侠跌落山崖，无意中竟发现斗帝传承！，增加修为:（" + new_grade + " + " + qy_grade + " ） 点，当前境界：" + dengji + " 修为：" + last_grade + " 点");                    ask = new Gson().toJson(askQQMessage);                    GetGrade.updateUsers(qqid, last_grade, update_time, groupid);                }            }        }        //有用户数据 单今天已经签到过了        if (default_grade != 0 && daily == 1) {            String dengji = DengJi.dengJi(default_grade);            askQQMessage.setMsg("[CQ:at,qq=" + qqid + "] 很遗憾 ，您今天已经签到过了，明天再来吧。当前等级：" + dengji + ", 当前修为：" + default_grade + " ,想继续签到只能充钱了哦~");            ask = new Gson().toJson(askQQMessage);        }    }}